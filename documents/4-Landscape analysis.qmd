---
title: "Landscape analysis"
author: "Aurore Ponchon"
format: html
editor: visual
---

# Linking landscape composition with individual movements

```{r}

library(here)
library(raster)
library(tidyverse)
library(sf)
library(landscapemetrics)
source(here::here("R","progress_bar.R"))
source(here::here("R","create_raster.R"))
#import landscape files

#land cover for each each
rast<-list.files(here::here("data","RawData","Landscape","Rasters land cover"),
                 full.names=T)
#single forest patches
land<-sf::read_sf(here::here("data","RawData","Landscape","Shapefiles Landscape AMLD", 
                             "SIG-EDUC Redescobrindo 2021 - Fragmentos de Vegetação.shp"))


#conservation units (patches)
ummp<-sf::read_sf(here::here("data","RawData","Landscape","Shapefiles Landscape AMLD",
                             "SIG-LGCI_UMMP-13.shp")) %>% 
  dplyr::select(Id,UMMPs,geometry) %>% 
  dplyr::mutate(UMMPs = as.factor(UMMPs)) 
  
ummp$UMMPs<-plyr::revalue(ummp$UMMPs, c("Imbaú I" = "Imbau I",
                         "Imbaú II" = "Imbau II",
                         "Imbaú III" = "Imbau III",
                         "Poço das Antas" = "Poco das Antas",
                         "União I" = "Uniao I",
                         "União II" = "Uniao II"))

loc<-read.table(here::here("data","rawData","Landscape","RegionsName.csv"),
                header=T,sep=";") %>% 
  dplyr::rename(Long=CENTROIDE.X.UTM.SAD69.23S,
                Lat=CENTROIDE.Y.UTM.SAD69.23S,
                Group=Abreviation) %>% 
  dplyr::select(-Platform,-City) %>% 
  dplyr::filter_all(any_vars(!is.na(.))) %>% 
  sf::st_as_sf(., coords = c("Long","Lat")) %>% 
  sf::st_set_crs(31983)

#etxent of study area in geographic coordinates
extreg<-extent(-42.7,-41.9,-22.9,-22.3)
size<-NULL


#projection for Brazil
proj<-"+proj=utm +zone=23 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs +type=crs"

# coverStack<-purrr::map(rast,create_raster_stack,.progress=T)
# save(coverStack, file=here::here("data","NewlyCreatedData","Cover_rasters.RData"))


#create an initial raster for size area
rastsize<-create_raster_stack(rast[1])

#create an initial raster for patches
patches<-create_raster_stack(rast[1])

ummp<-sf::read_sf(here::here("data","RawData","Landscape","Shapefiles Landscape AMLD", "SIG-LGCI_UMMP-13.shp")) %>% 
  dplyr::select(Id,UMMPs,geometry) %>% 
  dplyr::mutate()

land<-sf::read_sf(here::here("data","RawData","Landscape","Shapefiles Landscape AMLD", "SIG-EDUC Redescobrindo 2021 - Fragmentos de Vegetação.shp")) 


for (i in 1:length(rast)){
# i<-2

#get land cover
cover1<-create_raster_stack(rast[i])


#assign habitat types
setTxtProgressBar(progress_bar(length(rast)),i)  

#check_landscape(rast1)
#show_patches(rast1,class="all")
zz<- get_patches(cover1,class=1)
zzz<-zz$layer_1$class_1
names(zzz)<-paste("Patches",parse_number(rast[i]),sep="")
patches<-stack(zzz,patches)


#ll<-get_patches(rast1,class=1)
xx<-spatialize_lsm(cover1, what = "lsm_p_area")
rr<-xx$layer_1$lsm_p_area
names(rr)<-paste("Area",parse_number(rast[i]),sep="")

#show_lsm(rast1, what = "lsm_p_area", class=1,labels = TRUE)
 rastsize<-stack(rr,rastsize)
 
yy<-extract_lsm(cover1,loc,class=5)  %>% 
  dplyr:: mutate(Year=paste("cover",readr::parse_number(rast[i]),sep=""))
 
  size<-rbind(size,yy)
 
}


# terra::writeRaster(rasthabitat,
#                     filename=here::here(paste0("data",
#                                        "NewlyCreatedData",
#                                        "Landscape raster",
#                                        names(rasthabitat))),
#                     overwrite=T)
# 
# terra::writeRaster(patches,
#                     filename=here::here(paste0("data",
#                                        "NewlyCreatedData",
#                                        "Landscape rast")),
#                     overwrite=T,
#                     bylayer=T)


save(size,file=here::here("data","NewlyCreatedData","SizeArea_table.RData"))
save(rastsize,file=here::here("data","NewlyCreatedData","Raster_size.RData"))
save(patches,file=here::here("data","NewlyCreatedData","Raster_patches.RData"))

```

# GIF of habitat cover and size area

```{r}

library(gganimate)
library(gifski)

load(here::here("data","NewlyCreatedData","clean_raw_data_long.RData"))
load(here::here("data","NewlyCreatedData","Cover_rasters.RData"))
load(here::here("data","NewlyCreatedData","Raster_size.RData"))


#get regions with groups
group.reg<-data.clean %>% 
  ungroup() %>% 
  distinct_at(vars(Year,Group,UMMPs), keep_all=F)


reg<-sort(unique(group.reg$UMMPs))

totsizearea<-NULL

for (p in 1:length(reg)){
  
  setTxtProgressBar(progress_bar(length(reg)),p)  
#example for 1 specific region (crop on cover)
pda<- ummp %>% 
   dplyr::filter(UMMPs==reg[p])

habitatcrop<- purrr::map(coverStack,crop,pda)
habcropstack<-stack(habitatcrop)


sizecrop<-crop(rastsize,pda)

habarea<-terra::extract(habcropstack,loc) %>% 
  as.data.frame(.) %>% 
   cbind(loc) %>% 
#  dplyr::filter(Farm=="Rebio PDA" | Farm=="PDA") %>% 
  left_join (group.reg, by="Group") %>% 
  pivot_longer(cols=1:32,
               names_to="Cover_year",
               values_to="Habitat") %>% 
  dplyr::mutate(Year=parse_number(Cover_year),
                Fragment.Region=as.factor(Fragment.Region),
                Group=as.factor(Group),
   #             Patch= as.factor(brasil_coverage_1990),
                UMMPs=as.factor(UMMPs)) %>% 
# dplyr::filter(UMMPs=="Poco das Antas") %>%    #Aldeia II,  Rio Vermelho
  dplyr::arrange(Group,Year) %>% 
  drop_na() %>% 
  distinct()


sizearea<-terra::extract(sizecrop,loc) %>% 
  as.data.frame(.) %>% 
   cbind(loc) %>% 
#  dplyr::filter(Farm=="Rebio PDA" | Farm=="PDA") %>% 
  left_join (group.reg, by="Group") %>% 
  pivot_longer(cols=1:32,
               names_to="Cover_year",
               values_to="Size") %>% 
  dplyr::mutate(Year=parse_number(Cover_year),
                Fragment.Region=as.factor(Fragment.Region),
                Group=as.factor(Group),
   #             Patch= as.factor(brasil_coverage_1990),
                UMMPs=as.factor(UMMPs)) %>% 
# dplyr::filter(UMMPs=="Poco das Antas") %>%    #Aldeia II,  Rio Vermelho
  dplyr::arrange(Group,Year) %>% 
  drop_na() %>% 
  distinct()

totsizearea<-rbind(totsizearea,sizearea)

#convert raster stack to dataframe
habrast<- purrr::map_dfr(
  habitatcrop, 
  ~setNames(as.data.frame(as(., "SpatialPixelsDataFrame")),
            c('value', 'x', 'y')), 
            .id = 'year') %>% 
  dplyr::mutate(Year=as.numeric(year) + 1989)


sizerast<- sizecrop %>% 
  as.list(.) %>% 
  purrr::map_dfr(., 
  ~setNames(as.data.frame(as(., "SpatialPixelsDataFrame")),
            c('value', 'x', 'y')), 
            .id = 'year') %>% 
  dplyr::mutate(Year=as.numeric(year) + 1989)

#get coordinates in a dataframe
groupy<-sizearea %>% 
   mutate(long = unlist(map(sizearea$geometry,1)),
           lat = unlist(map(sizearea$geometry,2))) %>% 
  dplyr::select(Year,UMMPs,Size,long,lat,Group)  %>% 
  dplyr::filter(UMMPs==reg[p])


# gghab <- ggplot(habrast, aes(x = x, y = y)) +
#   geom_tile(aes(fill = value)) +
#   scale_fill_viridis_c()  +
#    geom_point(data=groupy, aes(x=long,y=lat,color=Group),shape=17,size=4,
#               show.legend=F)  
# print(gghab)
# 
# gganimhab <- gghab + 
#   transition_time(as.numeric(Year)) +
#    labs(subtitle = "Year: {round(frame_time,digits=0)}") 
#    
# print(c("animate habitat ", p))
# animate(gganimhab, height = 1000, width =2000,nframes=32,res=250,
#         renderer = gifski_renderer())
# anim_save(filename = here::here("outputs", "GIF cover",
#                                 paste("GIF_cover_",reg[p],".gif")))
          
          
# ggsize <- ggplot(sizerast, aes(x = x, y = y)) +
#   geom_tile(aes(fill = value)) +
#   scale_fill_viridis_c()  +
#    geom_point(data=groupy, aes(x=long,y=lat,color=Group),shape=17,size=4,
#               show.legend=F)  
# print(ggsize)
# 
# gganimsize <- ggsize + 
#   transition_time(as.numeric(Year)) +
#    labs(subtitle = "Year: {round(frame_time,digits=0)}") 
# 
#  print(c("animate size ", p))  
# 
# animate(gganimsize, height = 1000, width =2000,nframes=32,res=250,
#         renderer = gifski_renderer())
# anim_save(filename = here::here("outputs","GIF cover",paste0("GIF_size_",reg[p],
#                                        ".gif")))

}
}
```

# Evolution of size area of patches over time

```{r}

reg<-sort(unique(totsizearea$UMMPs))

totsizearea<-totsizearea %>% 
  dplyr::filter(Group!="MF" & Group !="JR" & Group != "PH2")

for (k in 1:length(reg)){

xx<-totsizearea %>% 
  dplyr::filter(UMMPs==reg[k])

ggg<-ggplot(xx,aes(x=Year,y=Size,group=Group)) +
  geom_line(aes(color=Group)) +
  facet_wrap(.~Group) +
  scale_colour_viridis_d(option="turbo")
  print(ggg)
  
   setTxtProgressBar(progress_bar(length(reg)),k)  
   
  tiff(file=here::here("outputs","Size Area",paste0("Size_",reg[k],".tif")),
       res=300,
       width=2000,
       height=1500,
       units="px",
       compression="lzw")
  print(ggg)
  dev.off()
  
  }
```
