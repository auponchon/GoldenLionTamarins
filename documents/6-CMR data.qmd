---
title: "6-CMR formatting"
author: "Aurore Ponchon"
format: html
editor: visual
---

## 1- Loading individual data and checking monitoring effort

We clearly see a difference in monitoring effort from 2001

```{r}
#| echo: false
#| message: false
#| warning: false


library(here)
library(tidyverse)

source(here::here("R","correct_translocations_cmr.R"))
source(here::here("R","get_covariates.R"))

 
load(here::here("data","NewlyCreatedData","data_clean_long_final.RData"))
bad<-c("?","T0","IN","?-1","?-2","?-3","FT","?-4","?-5","?-6")


#Monitoring effort over years based on the cuont of individuals
data.clean.final %>% 
   filter(!GLT %in% bad) %>% 
  group_by(Year) %>% 
  count() %>% 
  ggplot(., aes(x=Year,y=n)) +
  geom_point() +
  geom_line() +
  labs(y="Nb of observations per year") +
  scale_x_continuous(limits=c(1988,2023),
                     breaks=seq(1900,2020,5),
                     expand=c(0.001,0.001))+
  scale_y_continuous(limits=c(0,3000),
                     breaks=seq(0,3000,500),
                     expand=c(0.001,0.001))

#Monitoring effort over years based on individuals
data.clean.final %>% 
  filter(!GLT %in% bad) %>% 
  group_by(GLT,Year) %>% 
  count() %>% 
  ggplot(., aes(x=Year,y=n)) +
  geom_point() +
  labs(y="Nb of observations per year for each individuals") +
  scale_x_continuous(limits=c(1988,2023),
                     breaks=seq(1900,2020,5),
                     expand=c(0.001,0.001))+
  scale_y_continuous(limits=c(0,12),
                     breaks=seq(0,12,2),
                     expand=c(0.001,0.001))

#extract duplicated groups within years
# dups<-sum.up %>% 
#   group_by(GLT,Year) %>% 
#   dplyr::mutate(MaxCount=ifelse(n==max(n),1,0),
#                 MaxState=ifelse(State==max(State),1,0)) %>% 
#       filter(n() > 1)  %>% 
#      dplyr::mutate(Duplicated=1)
    # write.table(., file=here::here("Data","NewlyCreatedData","Duplicated_groups_within_years.csv"),
    #               quote=F,row.names=F ,sep=";")


#Load file to remove duplicatedgroups for individuals within the same year
dups.gp<-read.csv(here::here("data","NewlyCreatedData",
                             "Duplicated_groups_within_years_corrected.csv"),
                  header=T,
                  sep=";") %>% 
  dplyr::select(GLT,Year, Group,n,Duplicated,ToRemove)

#select groups with the most of observations over years (> 5 obs if <2022)
nb.gp.obs<-read.csv(here::here("data","NewlyCreatedData",
                             "Nb_obs_gp.csv"),
                  header=T,
                  sep=";") %>% 
 # dplyr::filter(Duration >6 & N>4 & !is.na(Group)) %>% 
  dplyr::select(Group)



```

# Create a subset with adults, sex and well observed groups over years

```{r}

# sum.up<-data.clean.final %>% 
#    dplyr::filter(!GLT %in% bad) %>% 
#   dplyr::filter(Disp!=1 & Death=="0" & Solo=="0") %>% 
#   dplyr::filter(!is.na(SexOK)) %>%  #get correct sex
#    dplyr::filter(IdadeOK=="AD") %>% #get only adults
# #  dplyr::filter(!is.na(IdadeOK)) %>% 
#   dplyr::filter( Year < 2008 & 
#                   # GLT %in% unique(data.clean.final$GLT
#                   #                 [data.clean.final$UMMPs=="Uniao I" |
#                   #                  data.clean.final$UMMPs=="Poco das Antas" |
#                   #                     data.clean.final$UMMPs=="Imbau II" |
#                   #                       data.clean.final$UMMPs=="Imbau I" |
#                   #                  data.clean.final$Group=="LB" | 
#                   #                  data.clean.final$Group=="EB" |
#                   #                  data.clean.final$Group=="EX" |
#                   #                     data.clean.final$Group=="AX2"])) %>% 
#     GLT %in% unique(data.clean.final$GLT
#                                   [data.clean.final$UMMPs=="Aldeia I" |
#                                    data.clean.final$UMMPs=="Aldeia II"])) %>% 
#   #filter(!Group=="BV")
#   
#     dplyr::arrange(DateObs) %>% 
#   group_by(GLT,Year,UMMPs,Group,SexOK,IdadeOK) %>% 
#   dplyr::count(Year) %>% 
#    dplyr::mutate(Female=ifelse(SexOK=="F","1","0"),
#                  Male=ifelse(SexOK=="M","1","0")) %>% 
#   ungroup()
# 
# length(unique(sum.up$GLT))  #1245 with correct known sex; 1347 including undefined sex
# #
# 
# 
# #filter nb of obs and group duplicates
# sum.up.correct<-sum.up %>% 
#   dplyr::filter(Group %in% nb.gp.obs$Group) %>%  #5978 obs
#   left_join(dups.gp,by=c("GLT","Year","Group")) %>% 
#   dplyr::mutate(ToRemove = replace_na(ToRemove, 0)) %>% 
#   dplyr::filter(ToRemove==0 ) %>% 
#   dplyr::select(GLT,Year,Group,Female,Male) %>% 
#  # dplyr::select(GLT,Year,Group,Juvenile,Subadult,Adult) %>% 
#    dplyr::mutate(State="1")
# 
# #get the wide table
# distinct.sum.up<-sum.up.correct %>% 
#  correct_translocation_cmr() %>% 
#   group_by(Year,GLT) %>% 
#       distinct() %>% 
#   dplyr::mutate(State="1") %>% 
#       arrange(Year,GLT) %>% 
#   pivot_wider(id_cols=c(GLT,Male,Female),
#             #  id_cols=c(GLT,Juvenile,Subadult,Adult),
#               names_from=Year,
#               names_prefix="O",
#                values_from=State,
#                values_fill="0")  %>% 
#      as.data.frame(.) 
# 
# 
# #file<-"CMR_1state_AD_UniaoI_PDA_ImbauI_II_LB_EB_EX_AX2_2009-2022_update"
# file<-"CMR_3states_AD_Sex_AldeiaI_II_1989-2007" 
#  
#    write.table(distinct.sum.up, file=here::here("data", 
#                                                 "NewlyCreatedData", 
#                                                 "CMR", 
#                                                 paste0(file,".csv")),
#                  quote=F,
#                  row.names=F ,
#                  sep=";",
#                  col.names=T)
# 
# 
# colNamesObs = colnames(distinct.sum.up)[4:ncol(distinct.sum.up)] #when sex included
# #colNamesObs = colnames(distinct.sum.up)[5:ncol(distinct.sum.up)] #when stage is included
# 
# 
# 
# distinct.sum.up$Obs = apply(distinct.sum.up[, colNamesObs, drop = F], 
#                               MARGIN = 1, FUN = function(i) paste(i, collapse = ""))
# 
# format<-distinct.sum.up %>% 
#   dplyr::select(Obs) %>% 
#   # dplyr::mutate(Juv=distinct.sum.up$Juvenile,
#   #               Subadult=distinct.sum.up$Subadult,
#   #   Adult=paste0(distinct.sum.up$Adult," ;"))
#   dplyr::mutate(Female=distinct.sum.up$Female,
#                 Male=paste0(distinct.sum.up$Male," ;"))
# 
# 
#  write.table(format, file=here::here("CMR", "data", 
#                                      paste0(file,".inp")),
#                  quote=F,
#              row.names=F ,
#                  sep=" ",
#                  col.names=F)
 
```

# Create a dataset with 3 states with adults

```{r}
#select all individuals with valid observations
sum.up<-data.clean.final %>% 
   dplyr::filter(!GLT %in% bad) %>% 
  dplyr::filter(Disp!=1 & Death=="0" & Solo=="0") %>% 
  dplyr::filter(!is.na(SexOK)) %>%  #get correct sex
   dplyr::filter(IdadeOK=="AD") %>% #get only adults
#  dplyr::filter(!is.na(IdadeOK)) %>% 
   dplyr::filter( Year > 2009 & 
                  GLT %in% unique(data.clean.final$GLT
                                  [data.clean.final$UMMPs=="Uniao I" |
                                   data.clean.final$UMMPs=="Poco das Antas" |
                                      data.clean.final$UMMPs=="Imbau II" |
                                        data.clean.final$UMMPs=="Imbau I" |
                                   data.clean.final$Group=="LB" |
                                   data.clean.final$Group=="EB" |
                                   data.clean.final$Group=="EX" |
                                      data.clean.final$Group=="AX2"])) %>%
                    # GLT %in% unique(data.clean.final$GLT
                    #                [data.clean.final$UMMPs=="Aldeia I" |
                    #                data.clean.final$UMMPs=="Aldeia II"])) %>%
    dplyr::arrange(DateObs) %>% 
  group_by(GLT,Year,UMMPs,Group,SexOK,IdadeOK) %>% 
  dplyr::count(Year) %>% 
   dplyr::mutate(Female=ifelse(SexOK=="F","1","0"),
               Male=ifelse(SexOK=="M","1","0")) %>% 
  ungroup()

length(unique(sum.up$GLT))  #1245 with correct known sex; 1347 including undefined sex

levels(sum.up$UMMPs) <- c(levels(sum.up$UMMPs), "out")
sum.up$UMMPs[which(is.na(sum.up$UMMPs))]<-"out"


#filter nb of obs and group duplicates
sum.up.correct<-sum.up %>%
  dplyr::filter(Group %in% nb.gp.obs$Group) %>%  #5978 obs
  left_join(dups.gp,by=c("GLT","Year","Group")) %>%
  dplyr::mutate(ToRemove = replace_na(ToRemove, 0)) %>%
  dplyr::filter(ToRemove==0 ) %>%
 # dplyr::select(GLT,Year,Group,UMMPs,Male,Female) %>%
   dplyr::mutate(State=0) %>%
   correct_translocation_cmr()  %>%
  distinct() %>%
  dplyr::mutate(UMMPs=as.character(UMMPs)) %>% 
  arrange(GLT,Year)

# xx<-sum.up.correct %>% 
#   group_by(GLT,Group) %>%
#  dplyr::summarise(GP = n()) %>% 
#    group_by(GLT) %>% 
#    dplyr::filter(n()>1) %>% 
#   distinct(GLT)   #73 individuals which have dispersed at least once; 
#20 which changed region

ids<-unique(sum.up.correct$GLT)

#a<-127

for (a in 1:length(ids)){
  row.id<-which(sum.up.correct$GLT==ids[a])
  
  temp<-sum.up.correct[row.id,]
  
gp<-unique(temp$Group)
ummp<-unique(temp$UMMPs)

sum.up.correct$State[which(sum.up.correct$GLT==ids[a] & 
                           sum.up.correct$Group==gp[1])]<-1


if(length(gp)>=2 & length(ummp)==1){
  sum.up.correct$State[which(sum.up.correct$GLT==ids[a] & 
                           sum.up.correct$Group %in% gp[2:length(gp)])]<-2}
  
 if(length(gp)==2 & length(ummp)==2){ 
  sum.up.correct$State[which(sum.up.correct$GLT==ids[a] & 
                           sum.up.correct$Group==gp[2])]<-3}
  
  
if(length(gp)>2 & length(ummp)>=2){ 
  sum.up.correct$State[which(sum.up.correct$GLT==ids[a] & 
                               sum.up.correct$Group!=gp[1] & 
                               sum.up.correct$UMMPs !=ummp[1])]<-3
  
  sum.up.correct$State[which(sum.up.correct$GLT==ids[a] & 
                               sum.up.correct$Group!=gp[1] & 
                               sum.up.correct$UMMPs == ummp[1])]<-2}

for (b in row.id[c(-1,-length(row.id))]){
  if(sum.up.correct$Group[b] == sum.up.correct$Group[b+1]){
    sum.up.correct$State[b+1]<-1
  }
  
   if(sum.up.correct$Group[b] != gp[1] & sum.up.correct$Group[b+1]==gp[1]){
    ifelse (sum.up.correct$UMMPs[b] != sum.up.correct$UMMPs[b+1],
        sum.up.correct$State[b+1]<-3,
         sum.up.correct$State[b+1]<-2)
    }
}
}

distinct.sum.up<-sum.up.correct %>% 
 correct_translocation_cmr()  %>% 
  dplyr::select(Year,GLT,Male,Female,State ) %>% 
  group_by(GLT,Year) %>% 
   slice_min(State) %>% 
  ungroup() %>% 
  distinct(Year,GLT,State,Male,Female) %>% 
  arrange(Year,GLT) 

distinct.sum.up.short<-distinct.sum.up %>% 
  pivot_wider(id_cols=c(GLT,Male,Female),
              names_from=Year,
              names_prefix="Obs",
               values_from=State,
              values_fill = 0) 
 


#file<-"CMR_3states_AD_Sex_UniaoI_PDA_ImbauI_II_LB_EB_EX_AX2_2009-2022"
 file<- "CMR_3states_AD_Sex_AldeiaI_II_1989-2007"
 
   write.table(distinct.sum.up.short, file=here::here("data", 
                                                "NewlyCreatedData", 
                                                "CMR", 
                                                paste0(file,".csv")),
                 quote=F,
                 row.names=F ,
                 sep=";",
                 col.names=T)


colNamesObs = colnames(distinct.sum.up.short)[4:ncol(distinct.sum.up.short)] #when sex included
#colNamesObs = colnames(distinct.sum.up)[2:ncol(distinct.sum.up)] 



distinct.sum.up.short$Obs = apply(distinct.sum.up.short[, colNamesObs, drop = F], 
                              MARGIN = 1, FUN = function(i) paste(i, collapse = ""))

format<-distinct.sum.up.short %>% 
  dplyr::select(Obs, Male, Female) %>% 
  dplyr::mutate(Sex=";")


 write.table(format, file=here::here("CMR", "data", 
                                     paste0(file,".inp")),
                 quote=F,
             row.names=F ,
                 sep=" ",
                 col.names=F)
 

```

# Plotting survival for 2011-2022

```{r}

library(xlsx)

param<-read.xlsx(here::here("CMR",
                           "models",
                           "3states_AD_SEX_UniaoI_PDA_ImbauI_II_LB_EB_EX_AX2_2010-2022_chat",
                           "s(t)psi(2T)p(f).xls"),
                sheetName="Reduced Set of Parameters", 
                header=T)  %>% 
  dplyr::filter(Parameters=="T" & Step==1) %>% 
   # dplyr::mutate(Sex=rep(c("Male","Female"),each=12),
   #               Year=c(seq(2010.95,2021.95,1),seq(2011.05,2022.05,1)))
   dplyr::mutate(Year=seq(2011,2022,1))
  
#col<-brewer.pal(5,"PuOr")[c(2,5)]
ss<-ggplot(param,aes(Year,Estimates))+#  ,group=Sex)) +
  geom_point()+#aes(color=Sex,shape=Sex)) +
  geom_line()+#aes(color=Sex,linetype=Sex)) +
  geom_errorbar(aes(ymin=Estimates-SE., ymax=Estimates+SE.), #color=Sex), 
                width=.1,
                 position=position_dodge(0.05),show.legend=F)+
  scale_x_continuous(limits=c(2010.5,2022.5),breaks=seq(2011,2022,1),
                     expand=c(0.001,0.001)) +
  scale_y_continuous(limits=c(0.6,1),breaks=seq(0.6,1,0.05),
                     expand=c(0.001,0.001)) +
  labs(x="",
       y="Survival probability")+
  theme_bw()+
#  scale_color_manual(values=col)+
  theme(legend.title=element_blank(),
        panel.grid.minor = element_blank())

print(ss)

tiff(filename=here::here("outputs","Survival_2011_2022_s(t)psi(2T)p(f).tiff"),
     width=4000, 
     height=2500,
     res=400,
     compression="lzw")
print(ss)
dev.off()

```

# Creating covariates

```{r}

gp.size<-get_group_size(data.clean.final)
dist<-get_distance()

```
