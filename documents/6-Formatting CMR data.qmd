---
title: "6-CMR formatting"
author: "Aurore Ponchon"
format: html
editor: visual
---

## 1- Formatting dataset to a wide format

The dataset for capture-recapture analyses includes individuals which have been clearly identified and sexed. Dispersed individuals, individuals out of groups and dead individuals are removed, as well as non identified infants.

```{r}

library(here)
library(tidyverse)

#| echo: false
#| message: false
#| warning: false
#| 
load(here::here("data","NewlyCreatedData","data_clean_long_final.RData"))
bad<-c("?","T0","IN","?-1","?-2","?-3","FT","?-4","?-5","?-6")



sum.up<-data.clean.final %>% 
   dplyr::filter(!GLT %in% bad) %>% 
  dplyr::filter(Disp!=1 & Death=="0" & Solo=="0") %>% 
 # dplyr::filter(!is.na(SexOK)) %>% 
  dplyr::filter(!is.na(UMMPs)) %>% 
    dplyr::arrange(DateObs) %>% 
  group_by(GLT,Year,Group,UMMPs,SexOK) %>% 
  dplyr::count(Year) %>% 
  dplyr::mutate(State=0,
                Female=ifelse(SexOK=="F",1,0),
                Male=ifelse(SexOK=="M",1,0)) 
 
  
xx<-sum.up %>% 
  group_by(Year,GLT) %>% 
   dplyr::filter(n == max(n))
  
ww<-anti_join(sum.up,xx)
# dplyr::summarise(N = n_distinct(Group)) #%>% 

length(unique(sum.up$GLT))

region.gp<-data.clean.final %>% 
  group_by(UMMPs,Group) %>% 
  slice(1) %>% 
  dplyr::select(UMMPs, Group) %>% 
  dplyr::filter(!is.na(UMMPs))


#get the name of all individuals observed in more than one group for the same year
dispind<- xx %>%
      dplyr::group_by(GLT,Year) %>%
      count(.) %>% 
      dplyr::filter(n > 1)

#get subset with those individuals
xx<- sum.up[which(sum.up$GLT %in% dispind$GLT),] 


ids<-unique(sum.up$GLT)

for (a in 1:length(ids)){
  
  temp<-sum.up[which(sum.up$GLT==ids[a]),]
  
  gp<-unique(temp$Group)
  print(max(length(gp)))
  
  #get first group in state 1
  sum.up$State[which(sum.up$GLT==ids[a] & sum.up$Group==gp[1])]<-1
  
 #when disperse only once
   if(length(gp)==2){
    
    #if individuals disperse towards another group within same region
    ifelse(region.gp$UMMPs[which(region.gp$Group==gp[2])] ==
             region.gp$UMMPs[which(region.gp$Group==gp[1])],
    sum.up$State[which(sum.up$GLT==ids[a] & sum.up$Group==gp[2])]<-2,
    sum.up$State[which(sum.up$GLT==ids[a] & sum.up$Group==gp[2])]<-3)
   }
  
        if(length(gp)==3){
       ifelse(region.gp$UMMPs[which(region.gp$Group==gp[2])] ==
             region.gp$UMMPs[which(region.gp$Group==gp[1])],
    sum.up$State[which(sum.up$GLT==ids[a] & sum.up$Group==gp[2])]<-2,
    sum.up$State[which(sum.up$GLT==ids[a] & sum.up$Group==gp[2])]<-3)
  
    ifelse(region.gp$UMMPs[which(region.gp$Group==gp[3])] ==
             region.gp$UMMPs[which(region.gp$Group==gp[2])],
    sum.up$State[which(sum.up$GLT==ids[a] & sum.up$Group==gp[3])]<-2,
    sum.up$State[which(sum.up$GLT==ids[a] & sum.up$Group==gp[3])]<-3)
        }
   }






## Produce a table with a wide format
dat<-sum.up %>% 
  dplyr::select(Year,GLT,Female,Male,State,n ) %>% 
  dplyr::distinct() %>% 
  dplyr::arrange(Year,GLT) %>% 
  pivot_wider(id_cols=c(GLT,Male,Female),
              names_from=Year,
              names_prefix="Obs",
               values_from=State) #%>% 
   # write.table(., file=here::here("Data","NewlyCreatedData","CMR_wide_3states.csv"),
   #             quote=F,row.names=F ,sep=";")
```
